import json

# Dashboard básico de Grafana para FastAPI con métricas de Prometheus
dashboard = {
    "id": None,
    "uid": None,
    "title": "FastAPI Monitoring Dashboard",
    "tags": ["fastapi", "prometheus"],
    "timezone": "browser",
    "schemaVersion": 30,
    "version": 1,
    "refresh": "5s",
    "panels": [
        {
            "type": "graph",
            "title": "HTTP Request Duration",
            "id": 1,
            "datasource": "Prometheus",
            "targets": [
                {
                    "expr": "rate(http_request_duration_seconds_sum[1m]) / rate(http_request_duration_seconds_count[1m])",
                    "legendFormat": "avg duration",
                    "interval": ""
                }
            ],
            "xaxis": {
                "show": True,
                "mode": "time"
            },
            "yaxes": [
                {"format": "s", "label": "Seconds", "logBase": 1, "show": True},
                {"show": False}
            ]
        },
        {
            "type": "stat",
            "title": "Request Count by Method",
            "id": 2,
            "datasource": "Prometheus",
            "targets": [
                {
                    "expr": "sum(rate(http_requests_total[1m])) by (method)",
                    "legendFormat": "{{method}}",
                    "interval": ""
                }
            ],
            "fieldConfig": {
                "defaults": {
                    "unit": "short",
                    "thresholds": {"mode": "absolute", "steps": [{"color": "green", "value": None}]}
                },
                "overrides": []
            }
        },
        {
            "type": "bargauge",
            "title": "Requests by Status Code",
            "id": 3,
            "datasource": "Prometheus",
            "targets": [
                {
                    "expr": "sum(rate(http_requests_total[1m])) by (status)",
                    "legendFormat": "{{status}}",
                    "interval": ""
                }
            ],
            "fieldConfig": {
                "defaults": {
                    "unit": "short",
                    "thresholds": {"mode": "absolute", "steps": [{"color": "green", "value": None}]}
                },
                "overrides": []
            },
            "options": {
                "orientation": "horizontal",
                "displayMode": "gradient"
            }
        }
    ]
}

file_path = "/mnt/data/fastapi_dashboard.json"
with open(file_path, "w") as f:
    json.dump({"dashboard": dashboard, "overwrite": True}, f, indent=2)

file_path
